services:
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_DB: e-commerce-order-procession
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"


  mongodb:
    image: mongo:6.0
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: mongo
      MONGO_INITDB_DATABASE: e-commerce-order-procession
    volumes:
      - mongo-data:/data/db
#    Tells Docker to mount the mongo-data volume at /data/db in the container
#    Mount means attach a storage location (like a folder or volume) from one place into another,
#  so that the target can use or access it directly.


  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.2.1
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,INTERNAL://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,INTERNAL://kafka:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  init-kafka:
    image: confluentinc/cp-kafka:7.2.1
    depends_on:
      - kafka
    entrypoint: [ "/bin/sh", "-c" ]
    command: >
      "
      sleep 20 &&
      kafka-topics --bootstrap-server kafka:29092 --list &&
      kafka-topics --create --if-not-exists --topic order-placed --bootstrap-server kafka:29092 --replication-factor 1 --partitions 1 &&
      "

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8083:8080"
    environment:
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:29092

volumes:
  mongo-data:

