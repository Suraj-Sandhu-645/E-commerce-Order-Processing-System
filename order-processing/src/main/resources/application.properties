spring.application.name=order-processing
server.port=1002
spring.kafka.bootstrap-servers: localhost:9092
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.consumer.properties.spring.json.trusted.packages=com.example.cart_management.outgoing
#spring.kafka.consumer.properties.spring.json.value.default.type=OrderEvent:com.example.kafka_messaging_demo.dto.OrderEvent,InventoryEvent:com.example.kafka_messaging_demo.dto.InventoryEvent
spring.kafka.consumer.
spring.kafka.consumer.properties.spring.json.use.type.headers=true

# Producer Configs
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer


spring.datasource.url=jdbc:postgresql://localhost:5432/e-commerce-order-procession
spring.datasource.username=admin
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true

